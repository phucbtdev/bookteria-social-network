name: CI/CD Microservices Deploy

on:
  push:
    branches: [main]

jobs:
  build-and-publish-common:
    runs-on: ubuntu-latest
    if: contains(join(github.event.commits.*.modified, ','), 'common/')
    env:
      USERNAME: ${{ secrets.GH_USERNAME }}
      TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Restore Gradle cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: common-gradle-${{ runner.os }}-${{ hashFiles('common/**') }}
          restore-keys: |
            common-gradle-${{ runner.os }}-

      - name: Publish common module to GitHub Packages
        run: |
          cd common
          chmod +x gradlew
          ./gradlew publish

  build-services:
    runs-on: ubuntu-latest
    needs: build-and-publish-common
    env:
      USERNAME: ${{ secrets.GH_USERNAME }}
      TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Restore Gradle cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Build all services without tests
        run: |
          chmod +x ./api-gateway/gradlew
          ./api-gateway/gradlew -p api-gateway build -x test

          chmod +x ./identity-service/gradlew
          ./identity-service/gradlew -p identity-service build -x test

          chmod +x ./candidate-service/gradlew
          ./candidate-service/gradlew -p candidate-service build -x test

          chmod +x ./employer-service/gradlew
          ./employer-service/gradlew -p employer-service build -x test

          chmod +x ./job-service/gradlew
          ./job-service/gradlew -p job-service build -x test

  docker-push:
    runs-on: ubuntu-latest
    needs: build-services
    steps:
      - uses: actions/checkout@v4

      - name: Push api-gateway image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: phucbtdev/api-gateway
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          dockerfile: ./api-gateway/Dockerfile
          context: ./api-gateway

      - name: Push identity-service image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: phucbtdev/identity-service
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          dockerfile: ./identity-service/Dockerfile
          context: ./identity-service

      - name: Push candidate-service image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: phucbtdev/candidate-service
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          dockerfile: ./candidate-service/Dockerfile
          context: ./candidate-service

      - name: Push employer-service image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: phucbtdev/employer-service
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          dockerfile: ./employer-service/Dockerfile
          context: ./employer-service

      - name: Push job-service image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: phucbtdev/job-service
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          dockerfile: ./job-service/Dockerfile
          context: ./job-service


  deploy:
    runs-on: ubuntu-latest
    needs: docker-push
    steps:
      - name: SSH & Deploy via Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull phucbtdev/api-gateway
            docker pull phucbtdev/identity-service
            docker pull phucbtdev/candidate-service
            docker pull phucbtdev/employer-service
            docker pull phucbtdev/job-service

            docker-compose down
            docker-compose up -d
